<?xml version="1.0" encoding="UTF-8"?>
<!--
   Phon - An open source tool for research in phonology.
   Copyright (C) 2018 Gregory Hedlund & Yvan Rose
    
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<!--
    This file specifies the xml file format for a result set in Phon.
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://phon.ling.mun.ca/ns/result"
    targetNamespace="http://phon.ling.mun.ca/ns/result" elementFormDefault="unqualified"
    xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" jaxb:version="2.0">

    <xs:annotation>
        <xs:appinfo>
            <jaxb:globalBindings generateIsSetMethod="true"/>
        </xs:appinfo>
    </xs:annotation>

    <!-- Root element -->

    <xs:element name="result_set" type="ResultSetType">
        <xs:annotation>
            <xs:documentation>Default root element for a result set in a query.</xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:complexType name="ResultSetType">
        <xs:sequence>
            <xs:element ref="meta-keys" minOccurs="0" maxOccurs="1"/>
            <xs:element ref="result" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="session_path" type="nonEmptyString" use="required"/>
    </xs:complexType>

    <!-- Root level elements for JAXB fragmented processing -->

    <xs:element name="result" type="ResultType"/>
    <xs:element name="result_value" type="ResultValueType"/>
    <xs:element name="meta" type="MetaType"/>

    <!-- Definition for a result -->

    <xs:complexType name="ResultType" mixed="false">
        <xs:annotation>
            <xs:documentation>Type definition for the result element.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="result_value" minOccurs="1" maxOccurs="unbounded"/>
            <xs:element ref="meta" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="record_index" type="unsignedJavaInt" use="required"/>
        <xs:attribute name="schema" type="nonEmptyString" use="required"/>
        <xs:attribute name="excluded" type="xs:boolean" default="false">
            <xs:annotation>
                <xs:documentation>If excluded, the result will not appear in generated
                    reports.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <!-- Root level elements for JAXB fragmented processing -->

    <xs:element name="range" type="RangeType"/>
    <xs:element name="data" type="xs:string"/>
    <xs:element name="matcherGroup" type="xs:string"/>

    <!-- Definition for a result value (reference to data) -->

    <xs:complexType name="ResultValueType">
        <xs:annotation>
            <xs:documentation>Type definition for the resultValue element.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="range" minOccurs="1" maxOccurs="1"/>
            <xs:element ref="data" minOccurs="1" maxOccurs="1"/>
            <xs:element ref="matcherGroup" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="tier_name" type="nonEmptyString" use="required"/>
    	<xs:attribute name="name" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="RangeType">
        <xs:annotation>
            <xs:documentation>Type definition for the range element.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="start_index" type="charIndex" use="required"/>
        <xs:attribute name="end_index" type="charIndex" use="required"/>
        <xs:attribute name="excludes_end" type="xs:boolean" default="false"/>
    </xs:complexType>

    <!-- Definition for metadata -->

    <xs:element name="meta-keys" type="MetaKeyList"/>
    <xs:element name="meta-key" type="nonEmptyString"/>

    <xs:complexType name="MetaKeyList" mixed="false">
        <xs:sequence>
            <xs:element ref="meta-key" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MetaType">
        <xs:annotation>
            <xs:documentation>Type definition for the meta[data] element.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="key" type="nonEmptyString"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- Simple type for a non-empty extension of string -->

    <xs:simpleType name="nonEmptyString">
        <xs:annotation>
            <xs:documentation>An xs:string that has to have a length of at least
                1.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>


    <!-- Simple type for a non-empty extension of string -->

    <xs:simpleType name="unsignedJavaInt">
        <xs:annotation>
            <xs:documentation>An xs:int that is non-negative and maps to a Java
                int.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
            <xs:minInclusive value="-1"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="charIndex">
        <xs:annotation>
            <xs:documentation>Index to character position within a group.  Allows for -1 for null result values.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
            <xs:minInclusive value="-1"/>
        </xs:restriction>
    </xs:simpleType>

</xs:schema>
